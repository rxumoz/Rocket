apply plugin: 'com.android.library'

android {


    compileSdkVersion Versions.compile_sdk
    defaultConfig {
        minSdkVersion Versions.min_sdk
    }


    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //matchingFallbacks = ["firebase"]
            //signingConfig signingConfigs.config
        }
        beta {
            initWith release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            matchingFallbacks = ["release"]
            //signingConfig signingConfigs.config
        }
        debug {
            def userName = System.getenv("USER")
            versionNameSuffix applicationIdSuffix
            //matchingFallbacks = ["firebase_no_op"]
        }
        // Use a separate buildType for coverage: testCoverageEnabled produces slower code (4-5x slower
        // in places that I've benchmarked), and more importantly seems to break debugging with Android Studio
        // for some developers (i.e. variables can't be inspected or seen).
        coverage {
            initWith debug
            testCoverageEnabled true
            //matchingFallbacks = ["debug", "firebase_no_op"]
        }
        firebase {

            resValue "string", "default_web_client_id", SystemEnv.default_web_client_id ?: ""
            resValue "string", "firebase_database_url", SystemEnv.firebase_database_url ?: ""
            resValue "string", "gcm_defaultSenderId", SystemEnv.gcm_defaultSenderId ?: ""
            resValue "string", "google_api_key", SystemEnv.google_api_key ?: ""
            resValue "string", "google_app_id", SystemEnv.google_app_id ?: ""
            resValue "string", "google_crash_reporting_api_key", SystemEnv.google_crash_reporting_api_key ?: ""
            resValue "string", "project_id", SystemEnv.project_id ?: ""
            // plugin io.fabric should generate this build_id but somehow it just won't work here.
            // In the log it says "Crashlytics was applied to an android-library project.
            // Android-library support is currently an incubating feature. Contact support@fabric.io with any issues."
            // So maybe we can do that later.
            // Since there's no source code for me to trace, I'll do it manually.
            // For more details, use ./gradlew help --task fabricGenerateResourcesDebug
            resValue "string", "com.crashlytics.android.build_id", UUID.randomUUID().toString()
        }

        firebase_no_op {
        }
    }
}

dependencies {

    firebaseImplementation "com.google.firebase:firebase-core:${Versions.firebase}"
    firebaseImplementation "com.google.firebase:firebase-config:${Versions.firebase}"
    firebaseApi "com.google.firebase:firebase-messaging:${Versions.fcm}"
    firebaseImplementation "com.crashlytics.sdk.android:crashlytics:${Versions.crashlytics}"

}

android.variantFilter { variant ->
    if (variant.buildType.name.endsWith('release') || variant.buildType.name.endsWith('debug')) {
        variant.setIgnore(true);
    }
}